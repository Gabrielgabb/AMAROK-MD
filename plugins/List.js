 const Amarok = require('../lib/events')
 const Config = require('../config')
 const config = require('../config')


 const { hostname, uptime } = require("os");
  Amarok.addCMD(
     {     pattern: "list",
           isOwner: false,
           type: "user",
    },
   async(conn,match) => {
 
  let sections = [
     {  
    title: "·¥Ä·¥ç·¥Ä Ä·¥è·¥ã ·¥ç·¥á…¥·¥ú",
    rows: [
         {title: "„Äå ·¥Ö·¥è·¥°…¥ ü·¥è·¥Ä·¥Ös „Äç", rowld: 'selfoce', description: `“ì·¥á·¥Ä·¥õ·¥ú Ä·¥á·¥Ö  ô è ·¥Ä·¥ç·¥Ä Ä·¥è·¥ã`},
         {title: "„Äå …¢ Ä·¥è·¥ú·¥ò ·¥ç·¥á…¥·¥ú „Äç", rowld: 'groups', description: `“ì·¥á·¥Ä·¥õ·¥ú Ä·¥á·¥Ö  ô è ·¥Ä·¥ç·¥Ä Ä·¥è·¥ã`},
         {title: "„Äå  ü…™s·¥õ ·¥ç·¥á…¥·¥ú „Äç", rowld: 'list', description: `“ì·¥á·¥Ä·¥õ·¥ú Ä·¥á·¥Ö  ô è ·¥Ä·¥ç·¥Ä Ä·¥è·¥ã`},
         {title: "„Äå …¢·¥Ä·¥ç·¥á ·¥ç·¥°…¥·¥ú „Äç", rowld: 'games', description: `“ì·¥á·¥Ä·¥õ·¥ú Ä·¥á·¥Ö  ô è ·¥Ä·¥ç·¥Ä Ä·¥è·¥ã`}
    ]
 },{
     title: "…¥·¥è·¥õ ·¥Ñ·¥è·¥ç·¥ç·¥Ä…¥·¥Ös",
     rows: [
           {title: "„Äå ·¥Ñ·¥è…¥·¥†·¥á Ä·¥õ·¥á Ä „Äç", rowld: 'vectors', description: `“ì·¥á·¥Ä·¥õ·¥ú Ä·¥á·¥Ö  ô è ·¥Ä·¥ç·¥Ä Ä·¥è·¥ã`},
           {title: "„Äå ·¥úÍú±·¥á Ä ·¥ç·¥á…¥·¥ú „Äç", rowld: 'users', description: `“ì·¥á·¥Ä·¥õ·¥ú Ä·¥á·¥Ö  ô è ·¥Ä·¥ç·¥Ä Ä·¥è·¥ã`},
           {title: "„Äå ·¥õ·¥è·¥è üÍú± ·¥ç·¥á…¥·¥ú „Äç", rowld: 'toolz', description: `“ì·¥á·¥Ä·¥õ·¥ú Ä·¥á·¥Ö  ô è ·¥Ä·¥ç·¥Ä Ä·¥è·¥ã`},
           {title: "„Äå Íú±·¥á·¥Ä Ä·¥Ñ ú ·¥ç·¥á…¥·¥ú „Äç", rowld: 'searchz', description: `“ì·¥á·¥Ä·¥õ·¥ú Ä·¥á·¥Ö  ô è ·¥Ä·¥ç·¥Ä Ä·¥è·¥ã`},
           {title: "„Äå ·¥è·¥°…¥·¥á Ä ·¥ç·¥á…¥·¥ú „Äç", rowld: 'coms', description: `“ì·¥á·¥Ä·¥õ·¥ú Ä·¥á·¥Ö  ô è ·¥Ä·¥ç·¥Ä Ä·¥è·¥ã`}
       ]
   },
  ]
     let [date, time] = new Date()
        .toLocaleString("en-IN", { timeZone: "Africa/Johannesburg" })
        .split(",");
 const listMessage = {
    text:`*‚ï≠‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ„ã∞*
*‚îÇ‚ï≠‚îÄ‚îÄ[ ${config.BOT_NAME} ]‚îÄ‚îÄ„ã∞*
*‚îÇ‚îÇ USER : ${conn.data.pushName}*
*‚îÇ‚îÇ VERSION : ${pjson.version}
*‚îÇ‚ï∞‚îÄ‚îÄ„ã∞*
*‚ï∞‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ„ã∞*`
    buttonText: "Íú±·¥á ü·¥á·¥Ñ·¥õ œª·¥ánu:)",
sections 
}
return await conn.sendMessage(conn.chatld, listMessage, { react: { text: "ü´Ç", key: conn.key,
  quoted: conn.data
 }})
});
